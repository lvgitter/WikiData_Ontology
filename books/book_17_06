Prefix(:=<http://book/>)
Prefix(bo:=<http://book/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology(<http://book/>

<http://book//1.0>
Declaration(Class(<http://books/Author>))
Declaration(Class(<http://books/Book>))
Declaration(Class(<http://books/Character>))
Declaration(Class(<http://books/City>))
Declaration(Class(<http://books/Country>))
Declaration(Class(<http://books/Edition>))
Declaration(Class(<http://books/FictionalCharacter>))
Declaration(Class(<http://books/FictionalCity>))
Declaration(Class(<http://books/FictionalHuman>))
Declaration(Class(<http://books/FictionalNonHuman>))
Declaration(Class(<http://books/Human>))
Declaration(Class(<http://books/Language>))
Declaration(Class(<http://books/Mayor>))
Declaration(Class(<http://books/Publisher>))
Declaration(Class(<http://books/RealCity>))
Declaration(Class(<http://books/Translator>))
Declaration(ObjectProperty(<http://books/BookWrittenIn>))
Declaration(ObjectProperty(<http://books/InfluencedBy>))
Declaration(ObjectProperty(<http://books/PlaceOfBirth>))
Declaration(ObjectProperty(<http://books/PlaceOfDeath>))
Declaration(ObjectProperty(<http://books/followedBy>))
Declaration(ObjectProperty(<http://books/foundedBy>))
Declaration(ObjectProperty(<http://books/hasAfterwordAuthor>))
Declaration(ObjectProperty(<http://books/hasAnalog>))
Declaration(ObjectProperty(<http://books/hasAuthor>))
Declaration(ObjectProperty(<http://books/hasCharacter>))
Declaration(ObjectProperty(<http://books/hasCountry>))
Declaration(ObjectProperty(<http://books/hasEdition>))
Declaration(ObjectProperty(<http://books/hasForewordAuthor>))
Declaration(ObjectProperty(<http://books/hasIllustrator>))
Declaration(ObjectProperty(<http://books/hasLocation>))
Declaration(ObjectProperty(<http://books/hasMayor>))
Declaration(ObjectProperty(<http://books/hasPublisher>))
Declaration(ObjectProperty(<http://books/hasRole>))
Declaration(ObjectProperty(<http://books/hasTranslator>))
Declaration(ObjectProperty(<http://books/hasUsedLanguage>))
Declaration(ObjectProperty(<http://books/locatedIn>))
Declaration(ObjectProperty(<http://books/speaks>))
Declaration(DataProperty(<http://books/DoB>))
Declaration(DataProperty(<http://books/DoD>))
Declaration(DataProperty(<http://books/author_genre>))
Declaration(DataProperty(<http://books/award>))
Declaration(DataProperty(<http://books/book_id>))
Declaration(DataProperty(<http://books/character_id>))
Declaration(DataProperty(<http://books/city_id>))
Declaration(DataProperty(<http://books/country_id>))
Declaration(DataProperty(<http://books/description>))
Declaration(DataProperty(<http://books/edition_id>))
Declaration(DataProperty(<http://books/end_time>))
Declaration(DataProperty(<http://books/human_id>))
Declaration(DataProperty(<http://books/inception>))
Declaration(DataProperty(<http://books/label>))
Declaration(DataProperty(<http://books/language_id>))
Declaration(DataProperty(<http://books/mayor-id>))
Declaration(DataProperty(<http://books/name>))
Declaration(DataProperty(<http://books/official_residence>))
Declaration(DataProperty(<http://books/publisher_id>))
Declaration(DataProperty(<http://books/sex>))
Declaration(DataProperty(<http://books/start_time>))
Declaration(DataProperty(<http://books/subtitle>))
Declaration(DataProperty(<http://books/title>))
Declaration(Datatype(xsd:string))
ObjectPropertyDomain(<http://books/BookWrittenIn> <http://books/Book>)
ObjectPropertyRange(<http://books/BookWrittenIn> <http://books/Language>)
ObjectPropertyDomain(<http://books/InfluencedBy> <http://books/Author>)
ObjectPropertyRange(<http://books/InfluencedBy> <http://books/Author>)
FunctionalObjectProperty(<http://books/PlaceOfBirth>)
ObjectPropertyDomain(<http://books/PlaceOfBirth> <http://books/Human>)
ObjectPropertyRange(<http://books/PlaceOfBirth> <http://books/RealCity>)
FunctionalObjectProperty(<http://books/PlaceOfDeath>)
ObjectPropertyDomain(<http://books/PlaceOfDeath> <http://books/Human>)
ObjectPropertyRange(<http://books/PlaceOfDeath> <http://books/RealCity>)
FunctionalObjectProperty(<http://books/followedBy>)
InverseFunctionalObjectProperty(<http://books/followedBy>)
ObjectPropertyDomain(<http://books/followedBy> <http://books/Book>)
ObjectPropertyRange(<http://books/followedBy> <http://books/Book>)
ObjectPropertyDomain(<http://books/foundedBy> <http://books/Publisher>)
ObjectPropertyRange(<http://books/foundedBy> <http://books/Human>)
ObjectPropertyDomain(<http://books/hasAfterwordAuthor> <http://books/Book>)
ObjectPropertyRange(<http://books/hasAfterwordAuthor> <http://books/Author>)
FunctionalObjectProperty(<http://books/hasAnalog>)
ObjectPropertyDomain(<http://books/hasAnalog> <http://books/FictionalCity>)
ObjectPropertyRange(<http://books/hasAnalog> <http://books/RealCity>)
ObjectPropertyDomain(<http://books/hasAuthor> <http://books/Book>)
ObjectPropertyRange(<http://books/hasAuthor> <http://books/Author>)
ObjectPropertyDomain(<http://books/hasCharacter> <http://books/Book>)
ObjectPropertyRange(<http://books/hasCharacter> <http://books/Character>)
ObjectPropertyDomain(<http://books/hasCountry> <http://books/RealCity>)
ObjectPropertyRange(<http://books/hasCountry> <http://books/Country>)
InverseFunctionalObjectProperty(<http://books/hasEdition>)
ObjectPropertyDomain(<http://books/hasEdition> <http://books/Book>)
ObjectPropertyRange(<http://books/hasEdition> <http://books/Edition>)
ObjectPropertyDomain(<http://books/hasForewordAuthor> <http://books/Book>)
ObjectPropertyRange(<http://books/hasForewordAuthor> <http://books/Author>)
ObjectPropertyDomain(<http://books/hasIllustrator> <http://books/Edition>)
ObjectPropertyRange(<http://books/hasIllustrator> <http://books/Human>)
ObjectPropertyDomain(<http://books/hasLocation> <http://books/Book>)
ObjectPropertyRange(<http://books/hasLocation> <http://books/City>)
FunctionalObjectProperty(<http://books/hasMayor>)
InverseFunctionalObjectProperty(<http://books/hasMayor>)
ObjectPropertyDomain(<http://books/hasMayor> <http://books/RealCity>)
ObjectPropertyRange(<http://books/hasMayor> <http://books/Mayor>)
ObjectPropertyDomain(<http://books/hasPublisher> <http://books/Edition>)
ObjectPropertyRange(<http://books/hasPublisher> <http://books/Publisher>)
ObjectPropertyDomain(<http://books/hasRole> <http://books/Human>)
ObjectPropertyRange(<http://books/hasRole> <http://books/Mayor>)
ObjectPropertyDomain(<http://books/hasTranslator> <http://books/Edition>)
ObjectPropertyRange(<http://books/hasTranslator> <http://books/Translator>)
ObjectPropertyDomain(<http://books/hasUsedLanguage> <http://books/Country>)
ObjectPropertyRange(<http://books/hasUsedLanguage> <http://books/Language>)
FunctionalObjectProperty(<http://books/locatedIn>)
ObjectPropertyDomain(<http://books/locatedIn> <http://books/Publisher>)
ObjectPropertyRange(<http://books/locatedIn> <http://books/Country>)
ObjectPropertyDomain(<http://books/speaks> <http://books/Translator>)
ObjectPropertyRange(<http://books/speaks> <http://books/Language>)
FunctionalDataProperty(<http://books/DoB>)
DataPropertyDomain(<http://books/DoB> <http://books/Human>)
DataPropertyRange(<http://books/DoB> xsd:string)
FunctionalDataProperty(<http://books/DoD>)
DataPropertyDomain(<http://books/DoD> <http://books/Human>)
DataPropertyRange(<http://books/DoD> xsd:string)
DataPropertyDomain(<http://books/author_genre> <http://books/Author>)
DataPropertyRange(<http://books/author_genre> xsd:string)
DataPropertyDomain(<http://books/award> <http://books/Author>)
DataPropertyRange(<http://books/award> xsd:string)
FunctionalDataProperty(<http://books/book_id>)
DataPropertyDomain(<http://books/book_id> <http://books/Book>)
DataPropertyRange(<http://books/book_id> xsd:string)
FunctionalDataProperty(<http://books/character_id>)
DataPropertyDomain(<http://books/character_id> <http://books/Character>)
DataPropertyRange(<http://books/character_id> xsd:string)
FunctionalDataProperty(<http://books/city_id>)
DataPropertyDomain(<http://books/city_id> <http://books/City>)
DataPropertyRange(<http://books/city_id> xsd:string)
FunctionalDataProperty(<http://books/country_id>)
DataPropertyDomain(<http://books/country_id> <http://books/Country>)
DataPropertyRange(<http://books/country_id> xsd:string)
FunctionalDataProperty(<http://books/description>)
DataPropertyDomain(<http://books/description> <http://books/Book>)
DataPropertyDomain(<http://books/description> <http://books/City>)
DataPropertyRange(<http://books/description> xsd:string)
FunctionalDataProperty(<http://books/edition_id>)
DataPropertyDomain(<http://books/edition_id> <http://books/Edition>)
DataPropertyRange(<http://books/edition_id> xsd:string)
FunctionalDataProperty(<http://books/end_time>)
DataPropertyDomain(<http://books/end_time> <http://books/Mayor>)
DataPropertyRange(<http://books/end_time> xsd:string)
FunctionalDataProperty(<http://books/human_id>)
DataPropertyDomain(<http://books/human_id> <http://books/Human>)
DataPropertyRange(<http://books/human_id> xsd:string)
FunctionalDataProperty(<http://books/inception>)
DataPropertyDomain(<http://books/inception> <http://books/Publisher>)
DataPropertyRange(<http://books/inception> xsd:string)
FunctionalDataProperty(<http://books/label>)
DataPropertyDomain(<http://books/label> <http://books/Book>)
DataPropertyDomain(<http://books/label> <http://books/City>)
DataPropertyRange(<http://books/label> xsd:string)
FunctionalDataProperty(<http://books/language_id>)
DataPropertyDomain(<http://books/language_id> <http://books/Language>)
DataPropertyRange(<http://books/language_id> xsd:string)
FunctionalDataProperty(<http://books/mayor-id>)
DataPropertyDomain(<http://books/mayor-id> <http://books/Mayor>)
DataPropertyRange(<http://books/mayor-id> xsd:string)
FunctionalDataProperty(<http://books/name>)
DataPropertyDomain(<http://books/name> <http://books/Human>)
DataPropertyRange(<http://books/name> xsd:string)
FunctionalDataProperty(<http://books/official_residence>)
DataPropertyDomain(<http://books/official_residence> <http://books/Mayor>)
DataPropertyRange(<http://books/official_residence> xsd:string)
FunctionalDataProperty(<http://books/publisher_id>)
DataPropertyDomain(<http://books/publisher_id> <http://books/Publisher>)
DataPropertyRange(<http://books/publisher_id> xsd:string)
FunctionalDataProperty(<http://books/sex>)
DataPropertyDomain(<http://books/sex> <http://books/Human>)
DataPropertyRange(<http://books/sex> xsd:string)
FunctionalDataProperty(<http://books/start_time>)
DataPropertyDomain(<http://books/start_time> <http://books/Mayor>)
DataPropertyRange(<http://books/start_time> xsd:string)
FunctionalDataProperty(<http://books/subtitle>)
DataPropertyDomain(<http://books/subtitle> <http://books/Book>)
DataPropertyRange(<http://books/subtitle> xsd:string)
FunctionalDataProperty(<http://books/title>)
DataPropertyDomain(<http://books/title> <http://books/Book>)
DataPropertyRange(<http://books/title> xsd:string)
EquivalentClasses(<http://books/Author> ObjectSomeValuesFrom(ObjectInverseOf(<http://books/hasAuthor>) owl:Thing))
SubClassOf(<http://books/Author> <http://books/Human>)
SubClassOf(<http://books/Author> DataSomeValuesFrom(<http://books/description> rdfs:Literal))
SubClassOf(<http://books/Author> DataSomeValuesFrom(<http://books/label> rdfs:Literal))
EquivalentClasses(<http://books/Book> ObjectSomeValuesFrom(<http://books/BookWrittenIn> owl:Thing))
EquivalentClasses(<http://books/Book> ObjectSomeValuesFrom(<http://books/hasAuthor> owl:Thing))
EquivalentClasses(<http://books/Book> DataSomeValuesFrom(<http://books/book_id> rdfs:Literal))
EquivalentClasses(<http://books/Book> DataSomeValuesFrom(<http://books/description> rdfs:Literal))
EquivalentClasses(<http://books/Book> DataSomeValuesFrom(<http://books/label> rdfs:Literal))
EquivalentClasses(<http://books/Book> DataSomeValuesFrom(<http://books/title> rdfs:Literal))
EquivalentClasses(<http://books/Character> ObjectSomeValuesFrom(ObjectInverseOf(<http://books/hasCharacter>) owl:Thing))
EquivalentClasses(<http://books/Character> DataSomeValuesFrom(<http://books/character_id> rdfs:Literal))
SubClassOf(<http://books/Character> ObjectUnionOf(<http://books/FictionalCharacter> <http://books/Human>))
SubClassOf(<http://books/Character> DataSomeValuesFrom(<http://books/description> rdfs:Literal))
SubClassOf(<http://books/Character> DataSomeValuesFrom(<http://books/label> rdfs:Literal))
EquivalentClasses(<http://books/City> ObjectUnionOf(<http://books/FictionalCity> <http://books/RealCity>))
EquivalentClasses(<http://books/City> DataSomeValuesFrom(<http://books/city_id> rdfs:Literal))
EquivalentClasses(<http://books/Country> ObjectSomeValuesFrom(<http://books/hasUsedLanguage> owl:Thing))
EquivalentClasses(<http://books/Country> DataSomeValuesFrom(<http://books/country_id> rdfs:Literal))
SubClassOf(<http://books/Country> DataSomeValuesFrom(<http://books/description> rdfs:Literal))
SubClassOf(<http://books/Country> DataSomeValuesFrom(<http://books/label> rdfs:Literal))
EquivalentClasses(<http://books/Edition> ObjectSomeValuesFrom(ObjectInverseOf(<http://books/hasEdition>) owl:Thing))
EquivalentClasses(<http://books/Edition> DataSomeValuesFrom(<http://books/edition_id> rdfs:Literal))
SubClassOf(<http://books/Edition> DataSomeValuesFrom(<http://books/description> rdfs:Literal))
SubClassOf(<http://books/Edition> DataSomeValuesFrom(<http://books/label> rdfs:Literal))
EquivalentClasses(<http://books/FictionalCharacter> ObjectUnionOf(<http://books/FictionalHuman> <http://books/FictionalNonHuman>))
SubClassOf(<http://books/FictionalCharacter> <http://books/Character>)
DisjointClasses(<http://books/FictionalCharacter> <http://books/Human>)
DisjointClasses(<http://books/FictionalCity> <http://books/RealCity>)
DisjointClasses(<http://books/FictionalHuman> <http://books/FictionalNonHuman>)
EquivalentClasses(<http://books/Human> ObjectSomeValuesFrom(<http://books/PlaceOfBirth> owl:Thing))
EquivalentClasses(<http://books/Human> DataSomeValuesFrom(<http://books/DoB> rdfs:Literal))
EquivalentClasses(<http://books/Human> DataSomeValuesFrom(<http://books/human_id> rdfs:Literal))
EquivalentClasses(<http://books/Human> DataSomeValuesFrom(<http://books/name> rdfs:Literal))
EquivalentClasses(<http://books/Human> DataSomeValuesFrom(<http://books/sex> rdfs:Literal))
SubClassOf(<http://books/Human> DataSomeValuesFrom(<http://books/description> rdfs:Literal))
SubClassOf(<http://books/Human> DataSomeValuesFrom(<http://books/label> rdfs:Literal))
EquivalentClasses(<http://books/Language> ObjectSomeValuesFrom(ObjectInverseOf(<http://books/hasUsedLanguage>) owl:Thing))
EquivalentClasses(<http://books/Language> DataSomeValuesFrom(<http://books/language_id> rdfs:Literal))
SubClassOf(<http://books/Language> DataSomeValuesFrom(<http://books/description> rdfs:Literal))
SubClassOf(<http://books/Language> DataSomeValuesFrom(<http://books/label> rdfs:Literal))
EquivalentClasses(<http://books/Mayor> ObjectSomeValuesFrom(ObjectInverseOf(<http://books/hasMayor>) owl:Thing))
EquivalentClasses(<http://books/Mayor> ObjectSomeValuesFrom(ObjectInverseOf(<http://books/hasRole>) owl:Thing))
EquivalentClasses(<http://books/Mayor> DataSomeValuesFrom(<http://books/mayor-id> rdfs:Literal))
EquivalentClasses(<http://books/Mayor> DataSomeValuesFrom(<http://books/official_residence> rdfs:Literal))
EquivalentClasses(<http://books/Mayor> DataSomeValuesFrom(<http://books/start_time> rdfs:Literal))
SubClassOf(<http://books/Mayor> DataSomeValuesFrom(<http://books/description> rdfs:Literal))
SubClassOf(<http://books/Mayor> DataSomeValuesFrom(<http://books/label> rdfs:Literal))
EquivalentClasses(<http://books/Publisher> ObjectSomeValuesFrom(<http://books/foundedBy> owl:Thing))
EquivalentClasses(<http://books/Publisher> ObjectSomeValuesFrom(<http://books/locatedIn> owl:Thing))
EquivalentClasses(<http://books/Publisher> ObjectSomeValuesFrom(ObjectInverseOf(<http://books/hasPublisher>) owl:Thing))
EquivalentClasses(<http://books/Publisher> DataSomeValuesFrom(<http://books/inception> rdfs:Literal))
EquivalentClasses(<http://books/Publisher> DataSomeValuesFrom(<http://books/publisher_id> rdfs:Literal))
SubClassOf(<http://books/Publisher> DataSomeValuesFrom(<http://books/description> rdfs:Literal))
SubClassOf(<http://books/Publisher> DataSomeValuesFrom(<http://books/label> rdfs:Literal))
EquivalentClasses(<http://books/RealCity> ObjectSomeValuesFrom(<http://books/hasCountry> owl:Thing))
EquivalentClasses(<http://books/Translator> ObjectSomeValuesFrom(<http://books/speaks> owl:Thing))
SubClassOf(<http://books/Translator> <http://books/Human>)
SubClassOf(<http://books/Translator> DataSomeValuesFrom(<http://books/description> rdfs:Literal))
SubClassOf(<http://books/Translator> DataSomeValuesFrom(<http://books/label> rdfs:Literal))
)
